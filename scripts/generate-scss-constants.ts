#!/usr/bin/env node --no-warnings=ExperimentalWarning --loader ts-node/esm

/**
 * Generates a SCSS file with color scss variables from the colors config.
 * Usage: `./scripts/generate-scss-constants.ts`
 */

/* eslint-disable no-console */

import fs from "fs";

import colorsConfig from "../src/styles/colors";

console.debug(colorsConfig);

console.debug("\n\n=>\n\n");

const scssContent =
  Object.entries(colorsConfig)
    .map(([baseColor, values]) => {
      return Object.entries(values)
        .map(([shade, value]) => {
          // `toLowerCase` is used to match our linter settings for hex values.
          return `$${baseColor}-${shade}: ${value.toLowerCase()};`;
        })
        .join("\n");
    })
    .join("\n\n") + "\n"; // Add a newline at the end of the file to match linter settings

console.debug(scssContent);

const CHANGES_WILL_BE_DISCARDED_COMMENT =
  "// DO NOT WRITE TO THIS FILE\n// This file is generated by `scripts/generate-scss-constants.ts`. Any changes will be discarded.\n\n";

const fileContent = CHANGES_WILL_BE_DISCARDED_COMMENT + scssContent;

fs.writeFileSync(`src/styles/_colors.scss`, fileContent);
